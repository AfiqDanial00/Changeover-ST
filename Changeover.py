import streamlit as st
import pandas as pd
from datetime import datetime

# Configure page for mobile
st.set_page_config(
    page_title="Shell Tube Checklist",
    layout="wide",
    page_icon="ЁЯУЛ",
    initial_sidebar_state="collapsed"  # Hide sidebar on mobile
)

# Complete translation dictionaries
translations = {
    "en": {
        "title": "ЁЯУЛ Shell Tube Changeover",
        "company": "Sumiputeh Steel Centre",
        "changeover_details": "1. Changeover Details",
        "date": "ЁЯУЕ Date",
        "shift": "ЁЯФД Shift",
        "shift_options": ["Morning", "Afternoon", "Night"],
        "product_from": "тмЕя╕П From Product Code",
        "product_to": "тЮбя╕П To Product Code",
        "operator": "ЁЯС╖ Operator Name",
        "length_adjustment": "2. Length Adjustment (Steps 1-4)",
        "length_steps": [
            "1. Change/Adjust stopper for length",
            "2. Adjust length delivery to Facing/Chamfering",
            "3. Adjust Facing/Chamfering length",
            "4. Change Expander Die"
        ],
        "three_point_die": "3. 3-Point Die (Steps 5-8)",
        "three_point_steps": [
            "5. Loosen bolts on 3-Point Die",
            "6. Remove 3-Point Die with forklift",
            "7. Install new 3-Point Die",
            "8. Align and tighten bolts"
        ],
        "burring_die": "4. Burring Die (Steps 9-14)",
        "burring_steps": [
            "9. Loosen bolts on Burring Die",
            "10. Remove Burring Die",
            "11. Install new Burring Die",
            "12. Align and tighten bolts",
            "13. Adjust Possit position",
            "14. QC check"
        ],
        "documentation": "5. Documentation",
        "remarks": "ЁЯУЭ Notes/Issues",
        "remarks_placeholder": "Enter notes or issues...",
        "submit": "тЬЕ Submit",
        "warning": "тЪая╕П Complete all fields",
        "success": "тЬФя╕П Submitted successfully!",
        "download": "ЁЯУе Download Records"
    },
    "ms": {
        "title": "ЁЯУЛ Tukar Tiub Shell",
        "company": "Sumiputeh Steel Centre",
        "changeover_details": "1. Butiran Pertukaran",
        "date": "ЁЯУЕ Tarikh",
        "shift": "ЁЯФД Syif",
        "shift_options": ["Pagi", "Petang", "Malam"],
        "product_from": "тмЕя╕П Kod Produk Asal",
        "product_to": "тЮбя╕П Kod Produk Baru",
        "operator": "ЁЯС╖ Nama Operator",
        "length_adjustment": "2. Pelarasan Panjang (Langkah 1-4)",
        "length_steps": [
            "1. Ubah/Laraskan stopper panjang",
            "2. Laraskan penghantaran ke Pengakhiran",
            "3. Laraskan panjang Pengakhiran",
            "4. Tukar Die Pengembang"
        ],
        "three_point_die": "3. Die 3-Titik (Langkah 5-8)",
        "three_point_steps": [
            "5. Longgarkan bolt pada Die 3-Titik",
            "6. Keluarkan Die dengan forklift",
            "7. Pasang Die 3-Titik baru",
            "8. Sejajarkan dan ketatkan bolt"
        ],
        "burring_die": "4. Die Burring (Langkah 9-14)",
        "burring_steps": [
            "9. Longgarkan bolt pada Die Burring",
            "10. Keluarkan Die Burring",
            "11. Pasang Die Burring baru",
            "12. Sejajarkan dan ketatkan bolt",
            "13. Laraskan kedudukan Possit",
            "14. Pemeriksaan QC"
        ],
        "documentation": "5. Dokumentasi",
        "remarks": "ЁЯУЭ Catatan/Masalah",
        "remarks_placeholder": "Masukkan catatan atau masalah...",
        "submit": "тЬЕ Hantar",
        "warning": "тЪая╕П Lengkapkan semua ruangan",
        "success": "тЬФя╕П Berjaya dihantar!",
        "download": "ЁЯУе Muat Turun Rekod"
    },
    "bn": {
        "title": "ЁЯУЛ рж╢рзЗрж▓ ржЯрж┐ржЙржм ржкрж░рж┐ржмрж░рзНрждржи",
        "company": "рж╕рзБржорж┐ржкрзБрждрзЗ рж╕рзНржЯрж┐рж▓ рж╕рзЗржирзНржЯрж╛рж░",
        "changeover_details": "рзз. ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржмрж┐ржмрж░ржг",
        "date": "ЁЯУЕ рждрж╛рж░рж┐ржЦ",
        "shift": "ЁЯФД рж╢рж┐ржлржЯ",
        "shift_options": ["рж╕ржХрж╛рж▓", "ржжрзБржкрзБрж░", "рж░рж╛ржд"],
        "product_from": "тмЕя╕П ржкрзВрж░рзНржмржмрж░рзНрждрзА ржкржгрзНржп ржХрзЛржб",
        "product_to": "тЮбя╕П ржирждрзБржи ржкржгрзНржп ржХрзЛржб",
        "operator": "ЁЯС╖ ржЕржкрж╛рж░рзЗржЯрж░рзЗрж░ ржирж╛ржо",
        "length_adjustment": "рзи. ржжрзИрж░рзНржШрзНржп рж╕ржоржирзНржмржпрж╝ (ржзрж╛ржк рзз-рзк)",
        "length_steps": [
            "рзз. ржжрзИрж░рзНржШрзНржпрзЗрж░ рж╕рзНржЯржкрж╛рж░ ржкрж░рж┐ржмрж░рзНрждржи/рж╕ржоржирзНржмржпрж╝ ржХрж░рзБржи",
            "рзи. ржлрзЗрж╕рж┐ржВ/ржЪрзНржпрж╛ржоржлрж╛рж░рж┐ржВржпрж╝рзЗ ржжрзИрж░рзНржШрзНржп ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ рж╕ржоржирзНржмржпрж╝ ржХрж░рзБржи",
            "рзй. ржлрзЗрж╕рж┐ржВ/ржЪрзНржпрж╛ржоржлрж╛рж░рж┐ржВ ржжрзИрж░рзНржШрзНржп рж╕ржоржирзНржмржпрж╝ ржХрж░рзБржи",
            "рзк. ржПржХрзНрж╕ржкрзНржпрж╛ржирзНржбрж╛рж░ ржбрж╛ржЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи"
        ],
        "three_point_die": "рзй. рзй-ржкржпрж╝рзЗржирзНржЯ ржбрж╛ржЗ (ржзрж╛ржк рзл-рзо)",
        "three_point_steps": [
            "рзл. рзй-ржкржпрж╝рзЗржирзНржЯ ржбрж╛ржЗржпрж╝рзЗрж░ ржмрзЛрж▓рзНржЯ рж╢рж┐ржерж┐рж▓ ржХрж░рзБржи",
            "рзм. ржлрж░рзНржХрж▓рж┐ржлрзНржЯ ржжрж┐ржпрж╝рзЗ ржбрж╛ржЗ рж╕рж░рж╛ржи",
            "рзн. ржирждрзБржи рзй-ржкржпрж╝рзЗржирзНржЯ ржбрж╛ржЗ ржЗржирж╕рзНржЯрж▓ ржХрж░рзБржи",
            "рзо. рж╕рж╛рж░рж┐ржмржжрзНржз ржХрж░рзЗ ржмрзЛрж▓рзНржЯ рж╢ржХрзНржд ржХрж░рзБржи"
        ],
        "burring_die": "рзк. ржмрж╛рж░рж┐ржВ ржбрж╛ржЗ (ржзрж╛ржк рзп-рззрзк)",
        "burring_steps": [
            "рзп. ржмрж╛рж░рж┐ржВ ржбрж╛ржЗржпрж╝рзЗрж░ ржмрзЛрж▓рзНржЯ рж╢рж┐ржерж┐рж▓ ржХрж░рзБржи",
            "рззрзж. ржмрж╛рж░рж┐ржВ ржбрж╛ржЗ рж╕рж░рж╛ржи",
            "рззрзз. ржирждрзБржи ржмрж╛рж░рж┐ржВ ржбрж╛ржЗ ржЗржирж╕рзНржЯрж▓ ржХрж░рзБржи",
            "рззрзи. рж╕рж╛рж░рж┐ржмржжрзНржз ржХрж░рзЗ ржмрзЛрж▓рзНржЯ рж╢ржХрзНржд ржХрж░рзБржи",
            "рззрзй. ржкржЬрж┐рж╢ржи рж╕ржоржирзНржмржпрж╝ ржХрж░рзБржи",
            "рззрзк. QC ржЪрзЗржХ ржХрж░рзБржи"
        ],
        "documentation": "рзл. ржбржХрзБржорзЗржирзНржЯрзЗрж╢ржи",
        "remarks": "ЁЯУЭ ржирзЛржЯ/рж╕ржорж╕рзНржпрж╛",
        "remarks_placeholder": "ржирзЛржЯ ржмрж╛ рж╕ржорж╕рзНржпрж╛ рж▓рж┐ржЦрзБржи...",
        "submit": "тЬЕ ржЬржорж╛ ржжрж┐ржи",
        "warning": "тЪая╕П рж╕ржм ржлрж┐рж▓рзНржб ржкрзВрж░ржг ржХрж░рзБржи",
        "success": "тЬФя╕П рж╕ржлрж▓ржнрж╛ржмрзЗ ржЬржорж╛ ржжрзЗржУржпрж╝рж╛ рж╣ржпрж╝рзЗржЫрзЗ!",
        "download": "ЁЯУе рж░рзЗржХрж░рзНржб ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзБржи"
    }
}

# Mobile-friendly CSS
st.markdown("""
<style>
    @media screen and (max-width: 768px) {
        .stContainer > div { flex-direction: column !important; }
        .main .block-container { padding: 1rem !important; }
        .header-container { padding: 1rem !important; margin-bottom: 1rem !important; }
        .stTextInput input, .stSelectbox select, 
        .stDateInput input, .stTextArea textarea {
            padding: 0.5rem !important;
            font-size: 14px !important;
        }
        .stButton button { width: 100% !important; margin: 0.25rem 0 !important; }
        .stCheckbox > label { padding: 0.5rem !important; font-size: 14px !important; }
        section[data-testid="stSidebar"] { display: none; }
    }
    
    .mobile-menu-btn {
        display: none;
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 100;
        background: #005b96 !important;
        color: white !important;
        border-radius: 50% !important;
        width: 50px !important;
        height: 50px !important;
        font-size: 24px !important;
        box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    }
    
    @media screen and (max-width: 768px) {
        .mobile-menu-btn { display: block !important; }
    }
</style>
""", unsafe_allow_html=True)

# Mobile menu toggle
st.markdown("""
<button class="mobile-menu-btn" onclick="document.querySelector('section[data-testid=\"stSidebar\"]').style.display = 
    document.querySelector('section[data-testid=\"stSidebar\"]').style.display === 'none' ? 'block' : 'none'">тШ░</button>
""", unsafe_allow_html=True)

# Language selection in sidebar
with st.sidebar:
    lang = st.selectbox("ЁЯМР Language", ["English", "Bahasa Malaysia", "Bengali"], index=0)
    lang_code = "en" if lang == "English" else "ms" if lang == "Bahasa Malaysia" else "bn"
    t = translations[lang_code]

# Mobile-optimized interface
st.markdown(f"""
<div class='header-container'>
    <h2>{t['title']}</h2>
    <h4>{t['company']}</h4>
</div>
""", unsafe_allow_html=True)

# Form sections
with st.expander(f"### {t['changeover_details']}", expanded=True):
    date = st.date_input(t['date'], value=datetime.today())
    shift = st.selectbox(t['shift'], t['shift_options'])
    product_from = st.text_input(t['product_from'])
    product_to = st.text_input(t['product_to'])
    operator_name = st.text_input(t['operator'])

with st.expander(f"### {t['length_adjustment']}", expanded=False):
    for step in t['length_steps']: st.checkbox(step)

with st.expander(f"### {t['three_point_die']}", expanded=False):
    for step in t['three_point_steps']: st.checkbox(step)

with st.expander(f"### {t['burring_die']}", expanded=False):
    for step in t['burring_steps']: st.checkbox(step)

with st.expander(f"### {t['documentation']}", expanded=False):
    remarks = st.text_area(t['remarks'], height=100, placeholder=t['remarks_placeholder'])

# Submission
if st.button(f"тЬЕ {t['submit']}", use_container_width=True):
    if not all([date, shift, product_from, product_to, operator_name]):
        st.warning(t['warning'])
    else:
        # Create dataframe with all data
        data = {
            "Date": [date],
            "Shift": [shift],
            "From_Product": [product_from],
            "To_Product": [product_to],
            "Operator": [operator_name],
            **{step: [True] for step in t['length_steps'] + t['three_point_steps'] + t['burring_steps']},
            "Remarks": [remarks],
            "Timestamp": [datetime.now()],
            "Language": [lang]
        }
        
        df = pd.DataFrame(data)
        
        # Save to CSV
        try:
            existing = pd.read_csv("checklist_records.csv")
            df = pd.concat([existing, df], ignore_index=True)
        except:
            pass
            
        df.to_csv("checklist_records.csv", index=False)
        st.success(t['success'])
        
        # Download button
        st.download_button(
            t['download'],
            data=df.to_csv(index=False),
            file_name="checklist_records.csv",
            mime="text/csv",
            use_container_width=True
        )
